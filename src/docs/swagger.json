{
  "swagger": "2.0",
  "info": {
    "description": "Documentation for CRM Service",
    "version": "1.0.0",
    "title": "CRM Service",
    "contact": {
      "email": "ogunbayo.abayo@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "branch-crm-services.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Agent",
      "description": "List of endpoints for agents"
    },
    {
      "name": "Message",
      "description": "List of endpoints for messages"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/agent": {
      "post": {
        "tags": [
          "Agent"
        ],
        "summary": "Create new agent",
        "description": "",
        "operationId": "Agent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Agent object that is required for store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Agent"
            }
          }
        ],
        "responses": {
          "200": {
            "status": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/agents": {
      "get": {
        "tags": [
          "Agent"
        ],
        "summary": "Fetch all agents",
        "description": "",
        "operationId": "FetchAllAgents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "status": "success"
          }
        }
      }
    },

    "/message": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Create new message",
        "description": "",
        "operationId": "createMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Message object that is required for store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        ],
        "responses": {
          "200": {
            "status": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/message/{id}": {
      "put": {
        "tags": [
          "Message"
        ],
        "summary": "Reply message",
        "description": "",
        "operationId": "replyMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The message id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "ReplyMessage object that is required for store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplyMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "status": "success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/message/agent/{agentId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Fetch agent messages",
        "description": "",
        "operationId": "fetchAgentMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "agentId",
            "description": "The agent id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "status": "success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/message/search": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Search messages",
        "description": "",
        "operationId": "searchMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "phrase",
            "description": "The search phrase",
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "status": "success"
          }
        }
      }
    },
    "/message/import": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Import message csv file",
        "description": "",
        "operationId": "messageImport",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "csv",
            "type": "file",
            "description": "message csv file"
          }
        ],
        "responses": {
          "200": {
            "status": "success"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "Agent": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "ReplyMessage": {
      "type": "object",
      "properties": {
        "reply": {
          "type": "string"
        }
      }
    }
  }
}